@blue: #50BFE6;
@darkBlue: #1fa5d6;
@blueComplementary: #FF8301;
@red: #ED0A3F;
@darkRed: #bf0833;
@green: #3AA655;
@darkGreen: #328f4a;
@yellow: #FBE870;
@darkYellow: #f9d90b;
@orange: #FF8833;
@darkOrange: #f06400;
@purple: #652DC1;
@darkPurple: #4c2291;
@darkText: #333;
@lightText: #FFF;
@buttonPadding: 1em;
@lightGray: #ccc;

.bc(@color) {
  background-color: @color;
}

.sbtn {
  padding: @buttonPadding;
  text-align: center;
  -webkit-appearance: none;
  .bc(transparent);
  border: 1px solid;
  cursor: pointer;
  border-color: transparent;
  color: @lightText;
  font-family: inherit;

  &:hover, &:active,
  &:focus {
    outline: none;
  }
}

a.sbtn {
  &, &:hover, &:active {
    text-decoration: none;
  }
}

.btn-rounded {
  border-radius: 25px;
}

.blue-btn {
  .bc(@blue);
}

.red-btn {
  .bc(@red);
}

.green-btn {
  .bc(@green);
}

.yellow-btn {
  .bc(@yellow);
  color: @darkText !important;
}

.orange-btn {
  .bc(@orange);
}

.purple-btn {
  .bc(@purple);
}

.hover-btn {
  transition: all .2s;
}

.hover-btn.blue-btn:hover, .hover-btn.blue-btn:active,
.hover-btn.blue-btn:focus {
  .bc(@darkBlue);
}

.hover-btn.green-btn:hover, .hover-btn.green-btn:active,
.hover-btn.green-btn:focus {
  .bc(@darkGreen);
}

.hover-btn.yellow-btn:hover, .hover-btn.yellow-btn:active,
.hover-btn.yellow-btn:focus {
  .bc(@darkYellow);
}

.hover-btn.red-btn:hover, .hover-btn.red-btn:active,
.hover-btn.red-btn:focus {
  .bc(@darkRed);
}

.hover-btn.purple-btn:hover, .hover-btn.purple-btn:active,
.hover-btn.purple-btn:focus {
  .bc(@darkPurple);
}

.hover-btn.orange-btn:hover, .hover-btn.orange-btn:active,
.hover-btn.orange-btn:focus {
  .bc(@darkOrange);
}

.fill-color-btn {
  .bc(transparent);
  position: relative;
  overflow: hidden;

  &:before {
    content: ' ';
    position: absolute;
    transition: all .2s cubic-bezier(0.39, 0.58, 0.57, 1);;
    z-index: -1;
  }

  &:not(.right-fill):before{
    left: 0;
  }

  &.right-fill:before {
    right: 0;
  }

  &.up-fill, &.down-fill {
    &:before {
      width: 100%;
      left: 0;
    }

    &.up-fill:before {
      top: 0;
    }

    &.down-fill:before {
      bottom: 0;
    }

    &:not(:hover):before {
      height: 0%;
    }

    &:hover:before {
      height: 100%;
    }
  }

  &:not(.up-fill):not(.down-fill){
    &:before {
      height: 100%;
      top: 0;
    }

    &:not(:hover):before {
      width: 0%;
    }

    &:hover:before {
      width: 100%;
    }
  }

  &:hover{
    color: @lightText !important;
  }

  .colorBtn(@color){
    border-color: @color !important;
    color: @color;

    &:before {
      .bc(@color);
    }
  }

  &.blue-btn {
    .colorBtn(@blue);
  }

  &.green-btn {
    .colorBtn(@green);
  }

  &.yellow-btn {
    .colorBtn(@yellow);

    &:hover {
      color: @darkText !important;
    }
  }

  &.orange-btn {
    .colorBtn(@orange);
  }

  &.red-btn {
    .colorBtn(@red);
  }

  &.purple-btn {
    .colorBtn(@purple);
  }
}

.scale-btn {
  transition: all .1s;
  &:hover {
    transform: scale(1.2);
  }
}

.arrowRules(){
  position: absolute;
  color: @lightText;
  height: 100%;
  top: -1px;
  display: flex;
  align-items: center;
  font-size: 2rem;
  transform: rotateY(90deg);
}

.arrowColorRules(@position){
  .after(@color){
    .bc(@color);
    border: 1px solid @color;
  }
  &.blue-btn:@{position} {
    .after(@blue);
  }
  &.green-btn:@{position} {
    .after(@green);
  }
  &.yellow-btn:@{position} {
    .after(@yellow);
    color: @darkText !important;
  }
  &.orange-btn:@{position} {
    .after(@orange);
  }
  &.red-btn:@{position} {
    .after(@red);
  }
  &.purple-btn:@{position} {
    .after(@purple);
  }
}

.next-arrow-btn {
  position: relative;

  &:after {
    content: '\203A';
    padding-left: .5em;
    .arrowRules()
  }

  &:not(.btn-rounded) {
    &:after {
      right: -.5em;
      transition: all .15s;
    }
  }

  &.btn-rounded {
    transition: padding-right .1s;
    &:hover {
      padding-right: @buttonPadding + 2;
    }
    &:after {
      right: 11px;
      border-radius: 50%;
      transition: all .05s;
    }
  }

  &:hover{
    &:after {
      transform: rotateY(0);
    }
  }

  .arrowColorRules(after);
}

.previous-arrow-btn {
  position: relative;
  &:before {
    content: '\2039';
    padding-right: .5em;
    .arrowRules()
  }

  &:not(.btn-rounded) {
    &:before {
      left: -.5em;
      transition: all .05s;
    }
  }

  &.btn-rounded {
    transition: padding-left .1s;
    &:hover {
      padding-left: @buttonPadding + 2;
    }
    &:before {
      left: 11px;
      border-radius: 50%;
      transition: all .05s;
    }
  }

  &:hover{
    &:before {
      transform: rotateY(0);
    }
  }

  .arrowColorRules(before);
}

.thd-btn {

  box-shadow: 0px 5px 0px @lightGray;

  &:active {
    box-shadow: 0px 2px 0px @lightGray;
  }

  &.blue-btn {
    &:hover {
      .bc(@darkBlue);
    }
  }

  &.green-btn {
    &:hover {
      .bc(@darkGreen);
    }
  }

  &.yellow-btn {
    &:hover {
      .bc(@darkYellow);
    }
  }

  &.orange-btn {
    &:hover {
      .bc(@darkOrange);
    }
  }

  &.red-btn {
    &:hover {
      .bc(@darkRed);
    }
  }

  &.purple-btn {
    &:hover {
      .bc(@darkPurple);
    }
  }
}

.download-btn {
  position: relative;
  padding-right: 2em;
  overflow: none;

  &:before, &:after {
    content: '\21E9';
    position: absolute;
    right: .5em;
    font-size: 1.5rem;
  }

  &:before {
    top: -100%;
  }

  &:after {
    top: 0.45em;
  }

  &:hover {
    &:before {
      animation: slideDownSecond .5s;
    }

    &:after {
      animation: slideDownSecond .5s;
    }
  }

  @keyframes slideDownFirst {
    0% {top: 0.45em;}
    100% {top: 120%;}
  }

  @keyframes slideDownSecond {
    0% {top: -100%}
    100% {top: 0.45em;}
  }
}
